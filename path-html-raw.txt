
  <!DOCTYPE html>
  <html>
    <head>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>

<!-- and it's easy to individually load additional languages -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/go.min.js"></script>

<script>hljs.highlightAll();</script>
    </head>
    <body>
      <h1><img src="./public/diff.ico" height="20" /> react-diff-viz</h1>
<p>react-diff-viz is a React component that compares and renders complex object differences</p>
<h2>Install</h2>
<pre><code class="hljs language-bash">npm install react-diff-viz
</code></pre><h2>Usage</h2>
<pre><code class="hljs language-tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Diff</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-diff-viz&quot;</span>;

<span class="hljs-comment">// describe the content to be rendered</span>
<span class="hljs-keyword">const</span> vizItems = [
    {
      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;name&quot;</span>,
      <span class="hljs-attr">label</span>: <span class="hljs-string">&quot;name&quot;</span>,
    },
    {
      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;age&quot;</span>,
      <span class="hljs-attr">label</span>: <span class="hljs-string">&quot;age&quot;</span>,
    },
    {
      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;address&quot;</span>,
      <span class="hljs-attr">label</span>: <span class="hljs-string">&quot;address&quot;</span>,
      <span class="hljs-attr">content</span>: <span class="hljs-function">(<span class="hljs-params">v</span>) =&gt;</span> {
        <span class="hljs-keyword">return</span> v.<span class="hljs-property">city</span> + <span class="hljs-string">&quot; of &quot;</span> + v.<span class="hljs-property">country</span>;
      },
    },
  ]

<span class="hljs-comment">// diff data1 and data2 ,then render</span>
&lt;<span class="hljs-title class_">Diff</span>
  data1={{
    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>,
    <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>,
    <span class="hljs-attr">address</span>: {
      <span class="hljs-attr">city</span>: <span class="hljs-string">&quot;New York&quot;</span>,
      <span class="hljs-attr">country</span>: <span class="hljs-string">&quot;USA&quot;</span>,
    },
  }}
  data2={{
    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>,
    <span class="hljs-attr">age</span>: <span class="hljs-number">31</span>,
    <span class="hljs-attr">address</span>: {
      <span class="hljs-attr">city</span>: <span class="hljs-string">&quot;New York&quot;</span>,
      <span class="hljs-attr">country</span>: <span class="hljs-string">&quot;USA&quot;</span>,
    },
  }}
  vizItems={vizItems}
/&gt;;
</code></pre><h2>Features</h2>
<blockquote>
<p>This component integrates diff algorithm and visual rendering, features are as follows</p>
</blockquote>
<ul>
<li>The left and right columns display the data, aligned to the height of corresponding field, and colored the different fields</li>
<li>The component comes with the diff function. You can customize the diff function for fields</li>
<li>The component has its own rendering function. You can customize rendering functions for fields</li>
<li>Supports comparison of nested objects and arrays</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>react (peer dependency)</li>
<li>react-dom (peer dependency)</li>
<li>lodash (peer dependency)</li>
</ul>
<h2>Demo</h2>
<p><a href="https://littlewhite-hai.github.io/react-diff-viz/">https://littlewhite-hai.github.io/react-diff-viz/</a></p>
<p><img src="./docs/public/demo.png" alt="demo"></p>
<h2>API</h2>
<h3>Diff Component API</h3>
<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>data1(required)</td>
<td>any</td>
<td>Data used for comparison (usually the original data)</td>
</tr>
<tr>
<td>data2(required)</td>
<td>any</td>
<td>Data used for comparison (usually the new data)</td>
</tr>
<tr>
<td>vizItems(required)</td>
<td>Array&lt;VizItem&gt;</td>
<td>Describes the data to be rendered, including diff method and rendering method</td>
</tr>
<tr>
<td>colStyle</td>
<td>CSSProperties</td>
<td>Overall style for the outer DOM of all data1 and data2</td>
</tr>
<tr>
<td>labelStyle</td>
<td>CSSProperties</td>
<td>Style for the label of each data item</td>
</tr>
<tr>
<td>contentStyle</td>
<td>CSSProperties</td>
<td>Style for the content of each data item</td>
</tr>
<tr>
<td>strictMode</td>
<td>boolean</td>
<td>Strict mode, enabled by default. When disabled, the diff algorithm ignores data type differences, e.g., 0=null=undefined=false</td>
</tr>
<tr>
<td>singleMode</td>
<td>boolean</td>
<td>Only view data2, default false</td>
</tr>
<tr>
<td>refreshKey</td>
<td>number</td>
<td>Change this key to trigger recoloring and height alignment</td>
</tr>
</tbody></table>
<h3>VizItems API</h3>
<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>label</td>
<td>string</td>
<td>Title of the data, if only label is provided, it renders a separator title</td>
</tr>
<tr>
<td>path</td>
<td>string</td>
<td>Data path of the data</td>
</tr>
<tr>
<td>visible</td>
<td>boolean</td>
<td>If false, the item will not be displayed</td>
</tr>
<tr>
<td>foldable(coming soon)</td>
<td>boolean</td>
<td>Whether it can be folded</td>
</tr>
<tr>
<td>isEqual</td>
<td>(v1,v2)=&gt;boolean</td>
<td>Customize the data diff algorithm</td>
</tr>
<tr>
<td>content</td>
<td>(v,ext)=&gt;ReactNode</td>
<td>Customize the data rendering method</td>
</tr>
<tr>
<td>arrayKey</td>
<td>string</td>
<td>Key for arrays, used to mark this data as array type</td>
</tr>
<tr>
<td>arrayAlignType</td>
<td>&quot;lcs&quot; | &quot;data2&quot; | &quot;none&quot;</td>
<td>Array alignment method, default is longest common subsequence (<a href="https://en.wikipedia.org/wiki/Longest_common_subsequence">lcs</a>) alignment</td>
</tr>
</tbody></table>
<h2>License</h2>
<p>MIT</p>

    </body>
  </html>
